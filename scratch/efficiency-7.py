
import sys
sys.set_int_max_str_digits(0)
sys.setrecursionlimit(100000)

def remainder(n, d):
    return (-1 if n < 0 else 1) * (abs(n) % abs(d))

def integer_divide_toward_zero(a, b):
    # Perform regular integer division
    result = a // b
    # Adjust the result if necessary
    if (a < 0) != (b < 0) and a % b != 0:
        result += 1
    return result

print(((lambda v1: (lambda v2: (v1)((v2)(v2)))(lambda v2: (v1)((v2)(v2))))(lambda v42: lambda v41: (lambda v1: (lambda v2: (lambda v3: (lambda v4: (lambda v5: (lambda v6: (lambda v7: (lambda v8: (lambda v9: (lambda v10: (lambda v11: (lambda v12: (lambda v13: (lambda v14: (lambda v15: (lambda v16: (lambda v17: (lambda v18: (lambda v19: (lambda v20: (lambda v21: (lambda v22: (lambda v23: (lambda v24: (lambda v25: (lambda v26: (lambda v27: (lambda v28: (lambda v29: (lambda v30: (lambda v31: (lambda v32: (lambda v33: (lambda v34: (lambda v35: (lambda v36: (lambda v37: (lambda v38: (lambda v39: (lambda v40: (v41 if (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((not v18 or not v15) and (not v14 or not v9)) and ((not v19 or v37) or v12)) and not v39) and (not v20 or v18)) and ((not v8 or v16) or not v24)) and (not v29 or not v39)) and (not v2 or v19)) and v15) and ((not v37 or v19) or not v6)) and (v25 or not v23)) and ((not v17 or v40) or v21)) and ((not v23 or v35) or v24)) and (not v30 or not v28)) and v15) and ((not v37 or v19) or v6)) and (not v3 or not v11)) and (not v35 or not v3)) and ((not v29 or v39) or v22)) and (not v27 or not v10)) and (v28 or not v8)) and (not v4 or v39)) and (v10 or v26)) and ((v22 or v14) or v15)) and not v13) and ((v36 or v28) or not v35)) and ((not v8 or v16) or v24)) and ((not v7 or v3) or not v40)) and ((v22 or v14) or v15)) and not v13) and ((not v8 or v16) or v24)) and ((not v19 or v37) or v12)) and (v10 or not v26)) and (not v20 or not v18)) and (not v8 or not v16)) and ((not v3 or v11) or not v23)) and (not v16 or v37)) and (not v38 or not v11)) and ((not v31 or v13) or v14)) and (not v33 or v19)) and ((not v14 or v9) or not v29)) and (v6 or v16)) and ((v36 or v28) or v35)) and (not v19 or not v37)) and (not v5 or v6)) and (v10 or v26)) and ((not v3 or v11) or v23)) and ((v26 or v37) or not v16)) and ((v22 or v14) or not v15)) and ((v25 or v23) or v38)) and (v36 or not v28)) and (not v35 or v3)) and ((not v34 or v35) or not v37)) and (not v5 or not v6)) and (not v33 or not v19)) and ((not v17 or v40) or v21)) and ((not v30 or v28) or v4)) and ((not v34 or v35) or v37)) and ((v28 or v8) or v29)) and not v21) and ((not v18 or v15) or v39)) and v40) and ((not v3 or v11) or v23)) and (not v17 or not v40)) and (not v35 or v3)) and (not v33 or v19)) and ((v25 or v23) or not v38)) and (not v27 or v10)) and ((v36 or v28) or v35)) and ((not v7 or v3) or v40)) and (not v11 or v35)) and (v6 or v16)) and ((not v30 or v28) or v4)) and (not v11 or not v35)) and (not v32 or v19)) and (not v37 or not v19)) and (v26 or not v37)) and ((not v30 or v28) or not v4)) and not v21) and (not v20 or v18)) and (not v9 or v31)) and ((v28 or v8) or v29)) and ((not v31 or v13) or not v14)) and ((not v24 or v32) or v35)) and (v12 or v16)) and ((not v29 or v39) or v22)) and ((not v14 or v9) or v29)) and not v39) and (not v4 or not v39)) and ((not v37 or v19) or v6)) and (not v23 or not v35)) and ((not v29 or v39) or not v22)) and (not v5 or v6)) and v40) and ((v25 or v23) or v38)) and (not v2 or v19)) and (v12 or v16)) and ((not v23 or v35) or v24)) and (not v31 or not v13)) and (not v34 or not v35)) and (not v32 or v19)) and ((not v24 or v32) or v35)) and ((v26 or v37) or v16)) and (not v38 or v11)) and (not v16 or v37)) and ((not v7 or v3) or v40)) and (not v4 or v39)) and (not v7 or not v3)) and ((not v24 or v32) or not v35)) and ((not v34 or v35) or v37)) and (not v11 or v35)) and v1) and (not v27 or v10)) and ((not v23 or v35) or not v24)) and ((not v18 or v15) or not v39)) and ((not v19 or v37) or not v12)) and ((v26 or v37) or v16)) and (v6 or not v16)) and ((not v17 or v40) or not v21)) and (not v9 or not v31)) and (not v32 or not v19)) and (not v38 or v11)) and (not v9 or v31)) and ((not v14 or v9) or v29)) and ((not v18 or v15) or v39)) and (v12 or not v16)) and (not v16 or not v37)) and (v22 or not v14)) and ((v28 or v8) or not v29)) and v1) and (not v24 or not v32)) and (not v2 or not v19)) and ((not v31 or v13) or v14)) else (v42)((v41 + 1))))((0 < remainder(integer_divide_toward_zero(v41, 549755813888), 2))))((0 < remainder(integer_divide_toward_zero(v41, 274877906944), 2))))((0 < remainder(integer_divide_toward_zero(v41, 137438953472), 2))))((0 < remainder(integer_divide_toward_zero(v41, 68719476736), 2))))((0 < remainder(integer_divide_toward_zero(v41, 34359738368), 2))))((0 < remainder(integer_divide_toward_zero(v41, 17179869184), 2))))((0 < remainder(integer_divide_toward_zero(v41, 8589934592), 2))))((0 < remainder(integer_divide_toward_zero(v41, 4294967296), 2))))((0 < remainder(integer_divide_toward_zero(v41, 2147483648), 2))))((0 < remainder(integer_divide_toward_zero(v41, 1073741824), 2))))((0 < remainder(integer_divide_toward_zero(v41, 536870912), 2))))((0 < remainder(integer_divide_toward_zero(v41, 268435456), 2))))((0 < remainder(integer_divide_toward_zero(v41, 134217728), 2))))((0 < remainder(integer_divide_toward_zero(v41, 67108864), 2))))((0 < remainder(integer_divide_toward_zero(v41, 33554432), 2))))((0 < remainder(integer_divide_toward_zero(v41, 16777216), 2))))((0 < remainder(integer_divide_toward_zero(v41, 8388608), 2))))((0 < remainder(integer_divide_toward_zero(v41, 4194304), 2))))((0 < remainder(integer_divide_toward_zero(v41, 2097152), 2))))((0 < remainder(integer_divide_toward_zero(v41, 1048576), 2))))((0 < remainder(integer_divide_toward_zero(v41, 524288), 2))))((0 < remainder(integer_divide_toward_zero(v41, 262144), 2))))((0 < remainder(integer_divide_toward_zero(v41, 131072), 2))))((0 < remainder(integer_divide_toward_zero(v41, 65536), 2))))((0 < remainder(integer_divide_toward_zero(v41, 32768), 2))))((0 < remainder(integer_divide_toward_zero(v41, 16384), 2))))((0 < remainder(integer_divide_toward_zero(v41, 8192), 2))))((0 < remainder(integer_divide_toward_zero(v41, 4096), 2))))((0 < remainder(integer_divide_toward_zero(v41, 2048), 2))))((0 < remainder(integer_divide_toward_zero(v41, 1024), 2))))((0 < remainder(integer_divide_toward_zero(v41, 512), 2))))((0 < remainder(integer_divide_toward_zero(v41, 256), 2))))((0 < remainder(integer_divide_toward_zero(v41, 128), 2))))((0 < remainder(integer_divide_toward_zero(v41, 64), 2))))((0 < remainder(integer_divide_toward_zero(v41, 32), 2))))((0 < remainder(integer_divide_toward_zero(v41, 16), 2))))((0 < remainder(integer_divide_toward_zero(v41, 8), 2))))((0 < remainder(integer_divide_toward_zero(v41, 4), 2))))((0 < remainder(integer_divide_toward_zero(v41, 2), 2))))((0 < remainder(integer_divide_toward_zero(v41, 1), 2)))))(1))
